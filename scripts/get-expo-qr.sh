#!/bin/bash

# Script para obtener el c√≥digo QR y informaci√≥n de conexi√≥n de Expo

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üéµ Music Downloader - Informaci√≥n de Conexi√≥n${NC}"
echo "=================================================="

# Obtener directorio del proyecto
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# Verificar si el archivo de logs de Expo existe
EXPO_LOG_FILE="$PROJECT_ROOT/logs/expo.log"

if [ ! -f "$EXPO_LOG_FILE" ]; then
    echo -e "${RED}‚ùå No se encontr√≥ el archivo de logs de Expo${NC}"
    echo -e "${YELLOW}üí° Aseg√∫rate de que el servicio de Expo est√© ejecut√°ndose:${NC}"
    echo "   ./control-services.sh start"
    echo "   ./control-services.sh status"
    exit 1
fi

echo -e "${GREEN}üì± Informaci√≥n para conectar desde iPhone:${NC}"
echo ""

# Buscar informaci√≥n de conexi√≥n en los logs
echo -e "${YELLOW}üîç Buscando informaci√≥n de conexi√≥n...${NC}"

# Buscar la URL de Expo
EXPO_URL=$(tail -n 50 "$EXPO_LOG_FILE" | grep -E "exp://.*:19000" | tail -n 1 | sed 's/.*\(exp:\/\/[^[:space:]]*\).*/\1/')

if [ -n "$EXPO_URL" ]; then
    echo -e "${GREEN}‚úÖ URL de Expo encontrada:${NC}"
    echo "   $EXPO_URL"
    echo ""
fi

# Buscar informaci√≥n del t√∫nel
TUNNEL_URL=$(tail -n 50 "$EXPO_LOG_FILE" | grep -E "https://.*\.exp\.direct" | tail -n 1 | sed 's/.*\(https:\/\/[^[:space:]]*\).*/\1/')

if [ -n "$TUNNEL_URL" ]; then
    echo -e "${GREEN}‚úÖ URL del t√∫nel encontrada:${NC}"
    echo "   $TUNNEL_URL"
    echo ""
fi

# Buscar c√≥digo QR
QR_FOUND=$(tail -n 50 "$EXPO_LOG_FILE" | grep -c "QR code")

if [ "$QR_FOUND" -gt 0 ]; then
    echo -e "${GREEN}‚úÖ C√≥digo QR disponible en los logs${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  C√≥digo QR no encontrado en logs recientes${NC}"
fi

echo ""
echo -e "${BLUE}üìã Instrucciones para iPhone:${NC}"
echo "1. üì± Abre la app 'Expo Go' en tu iPhone"
echo "2. üì∑ Toca 'Scan QR Code'"
echo "3. üéØ Escanea el c√≥digo QR que aparece abajo"
echo "4. ‚è≥ Espera a que la app se cargue"
echo ""

echo -e "${YELLOW}üîç C√≥digo QR y logs recientes:${NC}"
echo "=================================================="

# Mostrar las √∫ltimas l√≠neas del log que contienen informaci√≥n √∫til
tail -n 30 "$EXPO_LOG_FILE" | grep -E "(QR code|exp://|Scan|Metro|tunnel|https://.*\.exp\.direct)" || {
    echo -e "${YELLOW}‚ö†Ô∏è  No se encontr√≥ informaci√≥n de QR en logs recientes${NC}"
    echo -e "${BLUE}üìã Mostrando √∫ltimas l√≠neas del log:${NC}"
    tail -n 10 "$EXPO_LOG_FILE"
}

echo ""
echo "=================================================="
echo -e "${GREEN}üí° Comandos √∫tiles:${NC}"
echo "   ‚Ä¢ Ver logs completos: tail -f logs/expo.log"
echo "   ‚Ä¢ Reiniciar Expo: ./control-services.sh restart"
echo "   ‚Ä¢ Ver estado: ./control-services.sh status"
echo "   ‚Ä¢ Ver todos los logs: ./control-services.sh logs"
echo ""

# Verificar si el servicio est√° ejecut√°ndose
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    if launchctl list | grep -q "musicdownloader.expo"; then
        echo -e "${GREEN}‚úÖ Servicio de Expo est√° ejecut√°ndose${NC}"
    else
        echo -e "${RED}‚ùå Servicio de Expo no est√° ejecut√°ndose${NC}"
        echo -e "${YELLOW}üí° Para iniciarlo: ./control-services.sh start${NC}"
    fi
else
    # Linux
    if systemctl is-active --quiet musicdownloader-expo; then
        echo -e "${GREEN}‚úÖ Servicio de Expo est√° ejecut√°ndose${NC}"
    else
        echo -e "${RED}‚ùå Servicio de Expo no est√° ejecut√°ndose${NC}"
        echo -e "${YELLOW}üí° Para iniciarlo: ./control-services.sh start${NC}"
    fi
fi 